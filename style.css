body {
    background-color: rgb(24, 18, 118);
    font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    font-size: 48px;
    color:azure;
    display: flexbox;
    margin: 24px;
}

.gallery{    
    --c: 4; /*number of columns*/
    --g: 20px;/*control gap*/
    --s: 160px;/*ctrl size*/
    --f: 1.5; /*ctrl factor*/
    /*source: css-tricks.com/zooming-images-in-a-grid-layout*/
    
    display: grid;
    gap: var(--g);
    width: calc(3*var(--s) + 2*var(--g));
    aspect-ratio: 1;
    grid-template-columns: repeat(var(--c),auto);
}
.gallery > img {
    width: 0;
    height: 0;
    min-width: 100%;
    min-height: 100%;
    object-fit: cover;
    filter:brightness(40%);
    transition: .48s linear;
}
.gallery > img:hover{
    filter: none;
    width: calc(var(--s)*var(--f));
    height: calc(var(--s)*var(--f));
}

/*grid with img that hover change color*/
#grid1 {
    display: grid;
    /*resize: horizontal both
    interface allow resize div - in progress*/
    gap: 1rem;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    /*so that the grid items fit itself and add rows if not enough space for min width*/
    grid-auto-rows: 240px;
}

.grid1Items{
    overflow: hidden;
    mix-blend-mode: luminosity;
}
.grid1Items:hover{
    transform:  scale(1.2);
    mix-blend-mode: normal;
}
.grid1 > img {
    width: 0;
    height: 0;
    min-width: 100%;
    min-height: 100%;
    cursor: pointer;
    object-fit: cover;/*cover/contain: The image keeps its aspect ratio and fills the given dimension. The image will be clipped to fit*/
}

.long{
    grid-row: span 4 / auto;
}
.wide{
    grid-column: span 3 / auto;
}
.square{
    grid-column: span 2/ auto;
    grid-row: span 2 / auto;
}